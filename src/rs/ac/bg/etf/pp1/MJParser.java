
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Feb 08 18:20:02 CET 2021
//----------------------------------------------------

package rs.ac.bg.etf.pp1;

import java.util.*;
import java_cup.runtime.*;
import org.apache.log4j.*;
import rs.ac.bg.etf.pp1.ast.*;

/** CUP v0.10k generated parser.
  * @version Mon Feb 08 18:20:02 CET 2021
  */
public class MJParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MJParser() {super();}

  /** Constructor which sets the default scanner. */
  public MJParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\220\000\002\063\010\000\002\002\004\000\002\062" +
    "\003\000\002\003\004\000\002\003\002\000\002\004\003" +
    "\000\002\004\003\000\002\004\003\000\002\064\007\000" +
    "\002\075\005\000\002\074\003\000\002\074\003\000\002" +
    "\074\003\000\002\103\007\000\002\103\002\000\002\005" +
    "\007\000\002\005\005\000\002\076\004\000\002\076\002" +
    "\000\002\065\005\000\002\065\005\000\002\065\002\000" +
    "\002\007\003\000\002\115\004\000\002\006\011\000\002" +
    "\013\004\000\002\013\002\000\002\012\004\000\002\012" +
    "\002\000\002\014\004\000\002\014\002\000\002\015\004" +
    "\000\002\073\003\000\002\016\004\000\002\016\002\000" +
    "\002\017\012\000\002\067\004\000\002\067\004\000\002" +
    "\020\004\000\002\020\002\000\002\044\005\000\002\066" +
    "\005\000\002\066\002\000\002\072\005\000\002\021\003" +
    "\000\002\021\003\000\002\027\007\000\002\027\011\000" +
    "\002\060\003\000\002\026\003\000\002\026\011\000\002" +
    "\026\011\000\002\026\011\000\002\026\004\000\002\026" +
    "\004\000\002\026\005\000\002\026\007\000\002\026\010" +
    "\000\002\026\005\000\002\061\003\000\002\057\003\000" +
    "\002\010\003\000\002\011\003\000\002\022\004\000\002" +
    "\022\002\000\002\023\006\000\002\024\004\000\002\024" +
    "\002\000\002\113\003\000\002\113\002\000\002\025\004" +
    "\000\002\025\002\000\002\055\006\000\002\055\005\000" +
    "\002\055\005\000\002\055\007\000\002\055\006\000\002" +
    "\055\004\000\002\112\003\000\002\112\003\000\002\116" +
    "\006\000\002\116\003\000\002\071\003\000\002\117\005" +
    "\000\002\117\002\000\002\030\004\000\002\032\003\000" +
    "\002\035\005\000\002\035\002\000\002\105\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\003\000\002\105" +
    "\003\000\002\105\005\000\002\105\003\000\002\043\003" +
    "\000\002\102\004\000\002\031\005\000\002\033\003\000" +
    "\002\033\002\000\002\111\005\000\002\034\005\000\002" +
    "\034\002\000\002\104\004\000\002\070\004\000\002\070" +
    "\002\000\002\042\004\000\002\110\007\000\002\110\003" +
    "\000\002\106\003\000\002\077\003\000\002\100\003\000" +
    "\002\101\003\000\002\107\005\000\002\120\003\000\002" +
    "\120\002\000\002\121\004\000\002\121\002\000\002\045" +
    "\004\000\002\051\004\000\002\052\005\000\002\052\002" +
    "\000\002\050\004\000\002\056\003\000\002\053\005\000" +
    "\002\053\002\000\002\047\004\000\002\047\003\000\002" +
    "\114\004\000\002\054\004\000\002\054\002\000\002\036" +
    "\003\000\002\037\003\000\002\037\003\000\002\037\003" +
    "\000\002\037\003\000\002\037\003\000\002\037\003\000" +
    "\002\040\003\000\002\040\003\000\002\041\003\000\002" +
    "\041\003\000\002\041\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\351\000\004\004\005\001\002\000\004\002\353\001" +
    "\002\000\004\021\007\001\002\000\014\003\ufffd\005\ufffd" +
    "\021\ufffd\041\ufffd\063\ufffd\001\002\000\014\003\uffff\005" +
    "\uffff\021\uffff\041\uffff\063\uffff\001\002\000\014\003\020" +
    "\005\013\021\014\041\022\063\021\001\002\000\004\021" +
    "\347\001\002\000\014\003\ufffe\005\ufffe\021\ufffe\041\ufffe" +
    "\063\ufffe\001\002\000\010\006\uffdf\017\uffdf\021\uffdf\001" +
    "\002\000\056\005\uffe1\007\uffe1\011\uffe1\014\uffe1\015\uffe1" +
    "\021\uffe1\026\uffe1\027\uffe1\033\uffe1\036\uffe1\037\uffe1\040" +
    "\uffe1\042\uffe1\043\uffe1\046\uffe1\047\uffe1\050\uffe1\053\uffe1" +
    "\055\uffe1\056\uffe1\060\uffe1\061\uffe1\001\002\000\014\003" +
    "\ufffb\005\ufffb\021\ufffb\041\ufffb\063\ufffb\001\002\000\014" +
    "\003\ufffc\005\ufffc\021\ufffc\041\ufffc\063\ufffc\001\002\000" +
    "\014\003\ufffa\005\ufffa\021\ufffa\041\ufffa\063\ufffa\001\002" +
    "\000\006\007\uffec\015\uffec\001\002\000\004\021\041\001" +
    "\002\000\004\021\014\001\002\000\004\021\025\001\002" +
    "\000\006\007\ufff3\015\ufff3\001\002\000\004\012\026\001" +
    "\002\000\010\020\030\022\032\023\031\001\002\000\006" +
    "\007\ufff8\015\ufff8\001\002\000\006\007\ufff7\015\ufff7\001" +
    "\002\000\006\007\ufff5\015\ufff5\001\002\000\006\007\ufff6" +
    "\015\ufff6\001\002\000\006\007\035\015\034\001\002\000" +
    "\004\021\036\001\002\000\014\003\ufff9\005\ufff9\021\ufff9" +
    "\041\ufff9\063\ufff9\001\002\000\004\012\037\001\002\000" +
    "\010\020\030\022\032\023\031\001\002\000\006\007\ufff4" +
    "\015\ufff4\001\002\000\006\005\uffe5\030\042\001\002\000" +
    "\004\021\014\001\002\000\004\005\044\001\002\000\012" +
    "\003\uffe7\005\uffe7\006\uffe7\021\uffe7\001\002\000\012\003" +
    "\020\005\046\006\uffe3\021\014\001\002\000\010\006\uffdf" +
    "\017\uffdf\021\uffdf\001\002\000\004\006\051\001\002\000" +
    "\012\003\uffe8\005\uffe8\006\uffe8\021\uffe8\001\002\000\014" +
    "\003\uffe9\005\uffe9\021\uffe9\041\uffe9\063\uffe9\001\002\000" +
    "\010\006\055\017\060\021\014\001\002\000\004\006\uffe4" +
    "\001\002\000\004\021\333\001\002\000\004\006\uffe2\001" +
    "\002\000\010\006\uffe0\017\uffe0\021\uffe0\001\002\000\004" +
    "\010\062\001\002\000\004\021\061\001\002\000\004\010" +
    "\uffdc\001\002\000\006\011\uffda\021\014\001\002\000\004" +
    "\021\331\001\002\000\006\011\uffd7\015\uffd7\001\002\000" +
    "\004\011\066\001\002\000\010\003\uffe7\005\uffe7\021\uffe7" +
    "\001\002\000\010\003\020\005\070\021\014\001\002\000" +
    "\032\003\uffbe\005\uffbe\006\uffbe\013\uffbe\016\uffbe\021\uffbe" +
    "\024\uffbe\032\uffbe\051\uffbe\054\uffbe\062\uffbe\064\uffbe\001" +
    "\002\000\032\003\112\005\104\006\077\013\101\016\111" +
    "\021\076\024\103\032\102\051\107\054\073\062\105\064" +
    "\074\001\002\000\012\010\306\012\304\034\305\035\307" +
    "\001\002\000\004\010\277\001\002\000\004\007\276\001" +
    "\002\000\040\003\uffd0\005\uffd0\006\uffd0\013\uffd0\016\uffd0" +
    "\021\uffd0\024\uffd0\025\uffd0\032\uffd0\051\uffd0\052\uffd0\054" +
    "\uffd0\057\uffd0\062\uffd0\064\uffd0\001\002\000\062\007\uffb0" +
    "\010\uffb0\011\uffb0\012\uffb0\014\uffb0\015\uffb0\026\uffb0\027" +
    "\uffb0\033\uffb0\034\uffb0\035\uffb0\036\uffb0\037\uffb0\040\uffb0" +
    "\042\uffb0\043\uffb0\046\uffb0\047\uffb0\050\uffb0\053\uffb0\055" +
    "\uffb0\056\uffb0\060\uffb0\061\uffaf\001\002\000\010\006\uffde" +
    "\017\uffde\021\uffde\001\002\000\004\061\273\001\002\000" +
    "\022\007\uffbc\010\uff8d\020\uff8d\021\uff8d\022\uff8d\023\uff8d" +
    "\031\uff8d\033\121\001\002\000\004\010\255\001\002\000" +
    "\004\010\244\001\002\000\032\003\uffbe\005\uffbe\006\uffbe" +
    "\013\uffbe\016\uffbe\021\uffbe\024\uffbe\032\uffbe\051\uffbe\054" +
    "\uffbe\062\uffbe\064\uffbe\001\002\000\030\003\uffc4\005\uffc4" +
    "\013\uffc4\016\uffc4\021\uffc4\024\uffc4\032\uffc4\051\uffc4\054" +
    "\uffc4\062\uffc4\064\uffc4\001\002\000\030\003\112\005\104" +
    "\013\101\016\111\021\076\024\103\032\102\051\107\054" +
    "\073\062\105\064\074\001\002\000\004\007\210\001\002" +
    "\000\040\003\uffd4\005\uffd4\006\uffd4\013\uffd4\016\uffd4\021" +
    "\uffd4\024\uffd4\025\uffd4\032\uffd4\051\uffd4\052\uffd4\054\uffd4" +
    "\057\uffd4\062\uffd4\064\uffd4\001\002\000\004\010\116\001" +
    "\002\000\004\007\115\001\002\000\034\003\uffbf\005\uffbf" +
    "\006\uffbf\013\uffbf\016\uffbf\021\uffbf\024\uffbf\032\uffbf\051" +
    "\uffbf\052\uffbf\054\uffbf\062\uffbf\064\uffbf\001\002\000\036" +
    "\003\uffd5\005\uffd5\006\uffd5\013\uffd5\016\uffd5\021\uffd5\024" +
    "\uffd5\032\uffd5\051\uffd5\052\uffd5\054\uffd5\057\uffd5\062\uffd5" +
    "\064\uffd5\001\002\000\040\003\uffb4\005\uffb4\006\uffb4\013" +
    "\uffb4\016\uffb4\021\uffb4\024\uffb4\025\uffb4\032\uffb4\051\uffb4" +
    "\052\uffb4\054\uffb4\057\uffb4\062\uffb4\064\uffb4\001\002\000" +
    "\020\010\uff8d\020\uff8d\021\uff8d\022\uff8d\023\uff8d\031\uff8d" +
    "\033\121\001\002\000\034\007\uff94\011\uff94\015\uff94\026" +
    "\uff94\027\uff94\037\uff94\042\uff94\046\uff94\047\uff94\050\uff94" +
    "\053\uff94\055\uff92\060\uff94\001\002\000\006\011\uffba\015" +
    "\203\001\002\000\016\010\uff8e\020\uff8e\021\uff8e\022\uff8e" +
    "\023\uff8e\031\uff8e\001\002\000\016\010\144\020\134\021" +
    "\076\022\137\023\136\031\132\001\002\000\004\055\124" +
    "\001\002\000\020\010\uff8d\020\uff8d\021\uff8d\022\uff8d\023" +
    "\uff8d\031\uff8d\033\121\001\002\000\004\056\uff91\001\002" +
    "\000\004\056\127\001\002\000\020\010\uff8d\020\uff8d\021" +
    "\uff8d\022\uff8d\023\uff8d\031\uff8d\033\121\001\002\000\032" +
    "\007\uff95\011\uff95\015\uff95\026\uff95\027\uff95\037\uff95\042" +
    "\uff95\046\uff95\047\uff95\050\uff95\053\uff95\060\uff95\001\002" +
    "\000\032\007\uff90\011\uff90\015\uff90\026\uff90\027\uff90\037" +
    "\uff90\042\uff90\046\uff90\047\uff90\050\uff90\053\uff90\060\uff90" +
    "\001\002\000\004\021\014\001\002\000\052\007\uffa8\010" +
    "\165\011\uffa8\014\uffa8\015\uffa8\026\uffa8\027\uffa8\033\uffa8" +
    "\036\uffa8\037\uffa8\040\uffa8\042\uffa8\043\uffa8\046\uffa8\047" +
    "\uffa8\050\uffa8\053\uffa8\055\uffa8\056\uffa8\060\uffa8\001\002" +
    "\000\050\007\uffa7\011\uffa7\014\uffa7\015\uffa7\026\uffa7\027" +
    "\uffa7\033\uffa7\036\uffa7\037\uffa7\040\uffa7\042\uffa7\043\uffa7" +
    "\046\uffa7\047\uffa7\050\uffa7\053\uffa7\055\uffa7\056\uffa7\060" +
    "\uffa7\001\002\000\020\010\uff8d\020\uff8d\021\uff8d\022\uff8d" +
    "\023\uff8d\031\uff8d\033\121\001\002\000\050\007\uffa5\011" +
    "\uffa5\014\uffa5\015\uffa5\026\uffa5\027\uffa5\033\uffa5\036\uffa5" +
    "\037\uffa5\040\uffa5\042\uffa5\043\uffa5\046\uffa5\047\uffa5\050" +
    "\uffa5\053\uffa5\055\uffa5\056\uffa5\060\uffa5\001\002\000\050" +
    "\007\uffa6\011\uffa6\014\uffa6\015\uffa6\026\uffa6\027\uffa6\033" +
    "\uffa6\036\uffa6\037\uffa6\040\uffa6\042\uffa6\043\uffa6\046\uffa6" +
    "\047\uffa6\050\uffa6\053\uffa6\055\uffa6\056\uffa6\060\uffa6\001" +
    "\002\000\050\007\uffa4\011\uffa4\014\uffa4\015\uffa4\026\uffa4" +
    "\027\uffa4\033\uffa4\036\uffa4\037\uffa4\040\uffa4\042\uffa4\043" +
    "\uffa4\046\uffa4\047\uffa4\050\uffa4\053\uffa4\055\uffa4\056\uffa4" +
    "\060\uffa4\001\002\000\042\007\uff8b\011\uff8b\014\uff8b\015" +
    "\uff8b\026\uff8b\027\uff8b\033\uff8b\037\uff8b\042\uff8b\046\uff8b" +
    "\047\uff8b\050\uff8b\053\uff8b\055\uff8b\056\uff8b\060\uff8b\001" +
    "\002\000\050\007\uffa2\011\uffa2\014\uffa2\015\uffa2\026\uffa2" +
    "\027\uffa2\033\uffa2\036\uffa2\037\uffa2\040\uffa2\042\uffa2\043" +
    "\uffa2\046\uffa2\047\uffa2\050\uffa2\053\uffa2\055\uffa2\056\uffa2" +
    "\060\uffa2\001\002\000\050\007\uff97\011\uff97\014\uff97\015" +
    "\uff97\026\uff97\027\uff97\033\uff97\036\uff97\037\uff97\040\uff97" +
    "\042\uff97\043\uff97\046\uff97\047\uff97\050\uff97\053\uff97\055" +
    "\uff97\056\uff97\060\uff97\001\002\000\020\010\uffa1\020\uffa1" +
    "\021\uffa1\022\uffa1\023\uffa1\031\uffa1\033\uffa1\001\002\000" +
    "\050\007\uff99\011\uff99\014\uff99\015\uff99\026\uff99\027\uff99" +
    "\033\uff99\036\150\037\uff99\040\151\042\uff99\043\146\046" +
    "\uff99\047\uff99\050\uff99\053\uff99\055\uff99\056\uff99\060\uff99" +
    "\001\002\000\016\010\uff74\020\uff74\021\uff74\022\uff74\023" +
    "\uff74\031\uff74\001\002\000\050\007\uff98\011\uff98\014\uff98" +
    "\015\uff98\026\uff98\027\uff98\033\uff98\036\uff98\037\uff98\040" +
    "\uff98\042\uff98\043\uff98\046\uff98\047\uff98\050\uff98\053\uff98" +
    "\055\uff98\056\uff98\060\uff98\001\002\000\016\010\uff72\020" +
    "\uff72\021\uff72\022\uff72\023\uff72\031\uff72\001\002\000\016" +
    "\010\uff73\020\uff73\021\uff73\022\uff73\023\uff73\031\uff73\001" +
    "\002\000\016\010\144\020\134\021\076\022\137\023\136" +
    "\031\132\001\002\000\050\007\uff96\011\uff96\014\uff96\015" +
    "\uff96\026\uff96\027\uff96\033\uff96\036\uff96\037\uff96\040\uff96" +
    "\042\uff96\043\uff96\046\uff96\047\uff96\050\uff96\053\uff96\055" +
    "\uff96\056\uff96\060\uff96\001\002\000\042\007\uff8f\011\uff8f" +
    "\014\156\015\uff8f\026\uff8f\027\uff8f\033\157\037\uff8f\042" +
    "\uff8f\046\uff8f\047\uff8f\050\uff8f\053\uff8f\055\uff8f\056\uff8f" +
    "\060\uff8f\001\002\000\042\007\uff8c\011\uff8c\014\uff8c\015" +
    "\uff8c\026\uff8c\027\uff8c\033\uff8c\037\uff8c\042\uff8c\046\uff8c" +
    "\047\uff8c\050\uff8c\053\uff8c\055\uff8c\056\uff8c\060\uff8c\001" +
    "\002\000\016\010\uff76\020\uff76\021\uff76\022\uff76\023\uff76" +
    "\031\uff76\001\002\000\016\010\uff75\020\uff75\021\uff75\022" +
    "\uff75\023\uff75\031\uff75\001\002\000\016\010\144\020\134" +
    "\021\076\022\137\023\136\031\132\001\002\000\042\007" +
    "\uff8a\011\uff8a\014\uff8a\015\uff8a\026\uff8a\027\uff8a\033\uff8a" +
    "\037\uff8a\042\uff8a\046\uff8a\047\uff8a\050\uff8a\053\uff8a\055" +
    "\uff8a\056\uff8a\060\uff8a\001\002\000\004\011\163\001\002" +
    "\000\050\007\uffa3\011\uffa3\014\uffa3\015\uffa3\026\uffa3\027" +
    "\uffa3\033\uffa3\036\uffa3\037\uffa3\040\uffa3\042\uffa3\043\uffa3" +
    "\046\uffa3\047\uffa3\050\uffa3\053\uffa3\055\uffa3\056\uffa3\060" +
    "\uffa3\001\002\000\050\007\uffa0\011\uffa0\014\uffa0\015\uffa0" +
    "\026\uffa0\027\uffa0\033\uffa0\036\uffa0\037\uffa0\040\uffa0\042" +
    "\uffa0\043\uffa0\046\uffa0\047\uffa0\050\uffa0\053\uffa0\055\uffa0" +
    "\056\uffa0\060\uffa0\001\002\000\022\010\uff8d\011\uff9d\020" +
    "\uff8d\021\uff8d\022\uff8d\023\uff8d\031\uff8d\033\121\001\002" +
    "\000\006\011\uffa9\015\uffa9\001\002\000\004\011\uff9e\001" +
    "\002\000\006\011\uffab\015\uffab\001\002\000\004\011\172" +
    "\001\002\000\050\007\uff9f\011\uff9f\014\uff9f\015\uff9f\026" +
    "\uff9f\027\uff9f\033\uff9f\036\uff9f\037\uff9f\040\uff9f\042\uff9f" +
    "\043\uff9f\046\uff9f\047\uff9f\050\uff9f\053\uff9f\055\uff9f\056" +
    "\uff9f\060\uff9f\001\002\000\006\011\uffac\015\174\001\002" +
    "\000\020\010\uff8d\020\uff8d\021\uff8d\022\uff8d\023\uff8d\031" +
    "\uff8d\033\121\001\002\000\006\011\uffaa\015\uffaa\001\002" +
    "\000\052\007\uff9a\011\uff9a\014\uff9a\015\uff9a\026\uff9a\027" +
    "\uff9a\033\uff9a\036\uff9a\037\uff9a\040\uff9a\042\uff9a\043\uff9a" +
    "\046\uff9a\047\uff9a\050\uff9a\053\uff9a\055\uff9a\056\uff9a\060" +
    "\uff9a\061\200\001\002\000\050\007\uff9c\011\uff9c\014\uff9c" +
    "\015\uff9c\026\uff9c\027\uff9c\033\uff9c\036\uff9c\037\uff9c\040" +
    "\uff9c\042\uff9c\043\uff9c\046\uff9c\047\uff9c\050\uff9c\053\uff9c" +
    "\055\uff9c\056\uff9c\060\uff9c\001\002\000\020\010\uff8d\020" +
    "\uff8d\021\uff8d\022\uff8d\023\uff8d\031\uff8d\033\121\001\002" +
    "\000\004\060\202\001\002\000\050\007\uff9b\011\uff9b\014" +
    "\uff9b\015\uff9b\026\uff9b\027\uff9b\033\uff9b\036\uff9b\037\uff9b" +
    "\040\uff9b\042\uff9b\043\uff9b\046\uff9b\047\uff9b\050\uff9b\053" +
    "\uff9b\055\uff9b\056\uff9b\060\uff9b\001\002\000\004\020\207" +
    "\001\002\000\004\011\205\001\002\000\004\007\206\001" +
    "\002\000\040\003\uffc8\005\uffc8\006\uffc8\013\uffc8\016\uffc8" +
    "\021\uffc8\024\uffc8\025\uffc8\032\uffc8\051\uffc8\052\uffc8\054" +
    "\uffc8\057\uffc8\062\uffc8\064\uffc8\001\002\000\004\011\uffbb" +
    "\001\002\000\040\003\uffcc\005\uffcc\006\uffcc\013\uffcc\016" +
    "\uffcc\021\uffcc\024\uffcc\025\uffcc\032\uffcc\051\uffcc\052\uffcc" +
    "\054\uffcc\057\uffcc\062\uffcc\064\uffcc\001\002\000\004\057" +
    "\213\001\002\000\004\010\214\001\002\000\004\010\uffc3" +
    "\001\002\000\020\010\uff8d\020\uff8d\021\uff8d\022\uff8d\023" +
    "\uff8d\031\uff8d\033\121\001\002\000\024\011\uff81\026\233" +
    "\027\uff81\037\uff81\042\240\046\235\047\241\050\237\053" +
    "\234\001\002\000\020\010\uff8d\020\uff8d\021\uff8d\022\uff8d" +
    "\023\uff8d\031\uff8d\033\121\001\002\000\004\011\230\001" +
    "\002\000\010\011\uff83\027\uff83\037\uff83\001\002\000\006" +
    "\011\uff87\037\uff87\001\002\000\006\011\uff89\037\223\001" +
    "\002\000\020\010\uff8d\020\uff8d\021\uff8d\022\uff8d\023\uff8d" +
    "\031\uff8d\033\121\001\002\000\006\011\uff88\037\uff88\001" +
    "\002\000\010\011\uff86\027\226\037\uff86\001\002\000\020" +
    "\010\uff8d\020\uff8d\021\uff8d\022\uff8d\023\uff8d\031\uff8d\033" +
    "\121\001\002\000\010\011\uff84\027\uff84\037\uff84\001\002" +
    "\000\004\007\231\001\002\000\040\003\uffce\005\uffce\006" +
    "\uffce\013\uffce\016\uffce\021\uffce\024\uffce\025\uffce\032\uffce" +
    "\051\uffce\052\uffce\054\uffce\057\uffce\062\uffce\064\uffce\001" +
    "\002\000\010\011\uff82\027\uff82\037\uff82\001\002\000\020" +
    "\010\uff78\020\uff78\021\uff78\022\uff78\023\uff78\031\uff78\033" +
    "\uff78\001\002\000\020\010\uff7a\020\uff7a\021\uff7a\022\uff7a" +
    "\023\uff7a\031\uff7a\033\uff7a\001\002\000\020\010\uff77\020" +
    "\uff77\021\uff77\022\uff77\023\uff77\031\uff77\033\uff77\001\002" +
    "\000\020\010\uff80\020\uff80\021\uff80\022\uff80\023\uff80\031" +
    "\uff80\033\uff80\001\002\000\020\010\uff7c\020\uff7c\021\uff7c" +
    "\022\uff7c\023\uff7c\031\uff7c\033\uff7c\001\002\000\020\010" +
    "\uff79\020\uff79\021\uff79\022\uff79\023\uff79\031\uff79\033\uff79" +
    "\001\002\000\020\010\uff7b\020\uff7b\021\uff7b\022\uff7b\023" +
    "\uff7b\031\uff7b\033\uff7b\001\002\000\032\003\112\005\104" +
    "\006\243\013\101\016\111\021\076\024\103\032\102\051" +
    "\107\054\073\062\105\064\074\001\002\000\040\003\uffc7" +
    "\005\uffc7\006\uffc7\013\uffc7\016\uffc7\021\uffc7\024\uffc7\025" +
    "\uffc7\032\uffc7\051\uffc7\052\uffc7\054\uffc7\057\uffc7\062\uffc7" +
    "\064\uffc7\001\002\000\020\010\uff8d\020\uff8d\021\uff8d\022" +
    "\uff8d\023\uff8d\031\uff8d\033\121\001\002\000\004\011\246" +
    "\001\002\000\030\003\112\005\104\013\101\016\111\021" +
    "\076\024\103\032\102\051\107\054\073\062\105\064\074" +
    "\001\002\000\040\003\uffd3\005\uffd3\006\uffd3\013\uffd3\016" +
    "\uffd3\021\uffd3\024\uffd3\025\uffd3\032\uffd3\051\uffd3\052\uffd3" +
    "\054\uffd3\057\uffd3\062\uffd3\064\uffd3\001\002\000\040\003" +
    "\uffd5\005\uffd5\006\uffd5\013\uffd5\016\uffd5\021\uffd5\024\uffd5" +
    "\025\252\032\uffd5\051\uffd5\052\uffd5\054\uffd5\057\uffd5\062" +
    "\uffd5\064\uffd5\001\002\000\030\003\112\005\104\013\101" +
    "\016\111\021\076\024\103\032\102\051\107\054\073\062" +
    "\105\064\074\001\002\000\030\003\uffc5\005\uffc5\013\uffc5" +
    "\016\uffc5\021\uffc5\024\uffc5\032\uffc5\051\uffc5\054\uffc5\062" +
    "\uffc5\064\uffc5\001\002\000\040\003\uffcf\005\uffcf\006\uffcf" +
    "\013\uffcf\016\uffcf\021\uffcf\024\uffcf\025\uffcf\032\uffcf\051" +
    "\uffcf\052\uffcf\054\uffcf\057\uffcf\062\uffcf\064\uffcf\001\002" +
    "\000\040\003\uffd2\005\uffd2\006\uffd2\013\uffd2\016\uffd2\021" +
    "\uffd2\024\uffd2\025\uffd2\032\uffd2\051\uffd2\052\uffd2\054\uffd2" +
    "\057\uffd2\062\uffd2\064\uffd2\001\002\000\020\010\uff8d\020" +
    "\uff8d\021\uff8d\022\uff8d\023\uff8d\031\uff8d\033\121\001\002" +
    "\000\004\011\257\001\002\000\004\005\260\001\002\000" +
    "\006\006\uffc1\052\uffc1\001\002\000\006\006\263\052\264" +
    "\001\002\000\006\006\uffc2\052\uffc2\001\002\000\040\003" +
    "\uffcd\005\uffcd\006\uffcd\013\uffcd\016\uffcd\021\uffcd\024\uffcd" +
    "\025\uffcd\032\uffcd\051\uffcd\052\uffcd\054\uffcd\057\uffcd\062" +
    "\uffcd\064\uffcd\001\002\000\004\020\265\001\002\000\004" +
    "\056\266\001\002\000\034\003\uffbe\005\uffbe\006\uffbe\013" +
    "\uffbe\016\uffbe\021\uffbe\024\uffbe\032\uffbe\051\uffbe\052\uffbe" +
    "\054\uffbe\062\uffbe\064\uffbe\001\002\000\034\003\112\005" +
    "\104\006\uffc0\013\101\016\111\021\076\024\103\032\102" +
    "\051\107\052\uffc0\054\073\062\105\064\074\001\002\000" +
    "\004\007\272\001\002\000\004\007\uffbd\001\002\000\040" +
    "\003\uffca\005\uffca\006\uffca\013\uffca\016\uffca\021\uffca\024" +
    "\uffca\025\uffca\032\uffca\051\uffca\052\uffca\054\uffca\057\uffca" +
    "\062\uffca\064\uffca\001\002\000\020\010\uff8d\020\uff8d\021" +
    "\uff8d\022\uff8d\023\uff8d\031\uff8d\033\121\001\002\000\004" +
    "\060\275\001\002\000\060\007\uffb1\010\uffb1\011\uffb1\012" +
    "\uffb1\014\uffb1\015\uffb1\026\uffb1\027\uffb1\033\uffb1\034\uffb1" +
    "\035\uffb1\036\uffb1\037\uffb1\040\uffb1\042\uffb1\043\uffb1\046" +
    "\uffb1\047\uffb1\050\uffb1\053\uffb1\055\uffb1\056\uffb1\060\uffb1" +
    "\001\002\000\040\003\uffcb\005\uffcb\006\uffcb\013\uffcb\016" +
    "\uffcb\021\uffcb\024\uffcb\025\uffcb\032\uffcb\051\uffcb\052\uffcb" +
    "\054\uffcb\057\uffcb\062\uffcb\064\uffcb\001\002\000\004\021" +
    "\076\001\002\000\004\011\301\001\002\000\004\007\302" +
    "\001\002\000\040\003\uffc9\005\uffc9\006\uffc9\013\uffc9\016" +
    "\uffc9\021\uffc9\024\uffc9\025\uffc9\032\uffc9\051\uffc9\052\uffc9" +
    "\054\uffc9\057\uffc9\062\uffc9\064\uffc9\001\002\000\020\010" +
    "\uff8d\020\uff8d\021\uff8d\022\uff8d\023\uff8d\031\uff8d\033\121" +
    "\001\002\000\020\010\uff7d\020\uff7d\021\uff7d\022\uff7d\023" +
    "\uff7d\031\uff7d\033\uff7d\001\002\000\004\007\316\001\002" +
    "\000\022\010\uff8d\011\311\020\uff8d\021\uff8d\022\uff8d\023" +
    "\uff8d\031\uff8d\033\121\001\002\000\004\007\310\001\002" +
    "\000\040\003\uffb8\005\uffb8\006\uffb8\013\uffb8\016\uffb8\021" +
    "\uffb8\024\uffb8\025\uffb8\032\uffb8\051\uffb8\052\uffb8\054\uffb8" +
    "\057\uffb8\062\uffb8\064\uffb8\001\002\000\004\007\315\001" +
    "\002\000\004\011\313\001\002\000\004\007\314\001\002" +
    "\000\040\003\uffb6\005\uffb6\006\uffb6\013\uffb6\016\uffb6\021" +
    "\uffb6\024\uffb6\025\uffb6\032\uffb6\051\uffb6\052\uffb6\054\uffb6" +
    "\057\uffb6\062\uffb6\064\uffb6\001\002\000\040\003\uffb5\005" +
    "\uffb5\006\uffb5\013\uffb5\016\uffb5\021\uffb5\024\uffb5\025\uffb5" +
    "\032\uffb5\051\uffb5\052\uffb5\054\uffb5\057\uffb5\062\uffb5\064" +
    "\uffb5\001\002\000\040\003\uffb7\005\uffb7\006\uffb7\013\uffb7" +
    "\016\uffb7\021\uffb7\024\uffb7\025\uffb7\032\uffb7\051\uffb7\052" +
    "\uffb7\054\uffb7\057\uffb7\062\uffb7\064\uffb7\001\002\000\004" +
    "\007\320\001\002\000\040\003\uffb9\005\uffb9\006\uffb9\013" +
    "\uffb9\016\uffb9\021\uffb9\024\uffb9\025\uffb9\032\uffb9\051\uffb9" +
    "\052\uffb9\054\uffb9\057\uffb9\062\uffb9\064\uffb9\001\002\000" +
    "\006\011\uffdb\015\322\001\002\000\004\021\014\001\002" +
    "\000\006\011\uffd8\015\uffd8\001\002\000\004\021\325\001" +
    "\002\000\010\011\uffef\015\uffef\061\326\001\002\000\004" +
    "\060\330\001\002\000\006\011\uffd6\015\uffd6\001\002\000" +
    "\010\007\ufff0\011\ufff0\015\ufff0\001\002\000\010\011\uffef" +
    "\015\uffef\061\326\001\002\000\006\011\uffd9\015\uffd9\001" +
    "\002\000\004\010\uffdd\001\002\000\004\005\uffe6\001\002" +
    "\000\006\007\337\015\336\001\002\000\006\003\341\021" +
    "\343\001\002\000\016\003\ufff1\005\ufff1\006\ufff1\021\ufff1" +
    "\041\ufff1\063\ufff1\001\002\000\006\007\uffee\015\uffee\001" +
    "\002\000\006\007\uffeb\015\uffeb\001\002\000\006\007\uffed" +
    "\015\uffed\001\002\000\010\007\uffef\015\uffef\061\326\001" +
    "\002\000\006\007\uffea\015\uffea\001\002\000\010\006\346" +
    "\017\060\021\014\001\002\000\004\002\001\001\002\000" +
    "\010\007\uffef\015\uffef\061\326\001\002\000\006\007\uffec" +
    "\015\uffec\001\002\000\006\007\352\015\336\001\002\000" +
    "\016\003\ufff2\005\ufff2\006\ufff2\021\ufff2\041\ufff2\063\ufff2" +
    "\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\351\000\004\063\003\001\001\000\002\001\001\000" +
    "\004\062\005\001\001\000\004\003\007\001\001\000\002" +
    "\001\001\000\014\004\011\005\015\006\016\064\014\073" +
    "\010\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\016\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\065\334\001\001" +
    "\000\002\001\001\000\004\073\022\001\001\000\004\075" +
    "\023\001\001\000\004\103\032\001\001\000\002\001\001" +
    "\000\004\074\026\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\074\037\001\001\000\002\001\001\000\004\012\042" +
    "\001\001\000\004\073\333\001\001\000\002\001\001\000" +
    "\004\013\044\001\001\000\010\005\047\014\046\073\010" +
    "\001\001\000\006\015\052\016\051\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\017\055" +
    "\067\056\073\053\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\020\064\044" +
    "\063\073\062\001\001\000\002\001\001\000\004\066\320" +
    "\001\001\000\002\001\001\000\004\013\066\001\001\000" +
    "\006\005\047\073\010\001\001\000\004\024\070\001\001" +
    "\000\020\010\105\021\112\026\113\027\107\055\074\071" +
    "\077\116\071\001\001\000\004\036\302\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\077\122" +
    "\107\116\110\270\113\267\120\121\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\024\241\001\001\000\002" +
    "\001\001\000\020\010\105\021\210\026\113\027\107\055" +
    "\074\071\077\116\071\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\077\122" +
    "\107\116\110\117\120\121\001\001\000\002\001\001\000" +
    "\004\025\203\001\001\000\002\001\001\000\020\043\134" +
    "\071\077\102\141\104\140\105\142\111\137\116\132\001" +
    "\001\000\002\001\001\000\010\100\125\107\124\120\121" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\101" +
    "\127\107\130\120\121\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\073\175\001\001\000\004\031\163\001" +
    "\001\000\002\001\001\000\012\077\122\107\116\110\161" +
    "\120\121\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\121\153\001\001\000\002\001\001" +
    "\000\004\070\144\001\001\000\002\001\001\000\006\041" +
    "\151\042\146\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\043\134\071" +
    "\077\102\141\105\152\111\137\116\132\001\001\000\002" +
    "\001\001\000\006\040\157\045\154\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\043\134" +
    "\071\077\102\141\104\160\105\142\111\137\116\132\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\030\166\032\165\033\170\077" +
    "\122\107\116\110\167\120\121\001\001\000\004\035\172" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\077\122" +
    "\107\116\110\174\120\121\001\001\000\002\001\001\000" +
    "\004\034\176\001\001\000\002\001\001\000\012\077\122" +
    "\107\116\110\200\120\121\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\211\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\047\217\050\220\051\216\077\122\107" +
    "\116\110\214\114\215\120\121\001\001\000\004\037\235" +
    "\001\001\000\012\077\122\107\116\110\231\120\121\001" +
    "\001\000\002\001\001\000\004\053\224\001\001\000\004" +
    "\052\221\001\001\000\002\001\001\000\020\047\217\050" +
    "\223\077\122\107\116\110\214\114\215\120\121\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\047\226\077" +
    "\122\107\116\110\214\114\215\120\121\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\010\105\021\112\026\113\027\107" +
    "\055\074\071\077\116\071\001\001\000\002\001\001\000" +
    "\022\047\217\050\220\051\244\077\122\107\116\110\214" +
    "\114\215\120\121\001\001\000\002\001\001\000\020\010" +
    "\105\021\246\026\247\027\107\055\074\071\077\116\071" +
    "\001\001\000\002\001\001\000\004\057\250\001\001\000" +
    "\016\010\105\026\253\027\252\055\074\071\077\116\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\077\122\107\116\110\255\120\121\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\022\260\001" +
    "\001\000\004\023\261\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\024" +
    "\266\001\001\000\020\010\105\021\112\026\113\027\107" +
    "\055\074\071\077\116\071\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\077\122\107\116" +
    "\110\273\120\121\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\071\077\116\277\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\077\122\107\116\110\316\120\121\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\030\311\032\165\077" +
    "\122\107\116\110\167\120\121\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\072\322\073\323\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\076\326\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\076\331" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\341\115\337\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\076\343\001\001\000\002\001\001" +
    "\000\010\017\055\067\056\073\053\001\001\000\002\001" +
    "\001\000\004\076\347\001\001\000\004\065\350\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MJParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MJParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MJParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

	Symbol s = this.getScanner().next_token();
	if (s != null && s.value != null) 
		log.info(s.toString() + " " + s.value.toString());
	return s;

    }



	Logger log = Logger.getLogger(getClass());
	Boolean error_det = false;
   
   
    // slede redefinisani metodi za prijavu gresaka radi izmene teksta poruke
     
    public void report_fatal_error(String message, Object info) throws java.lang.Exception {
      done_parsing();

      report_error(message, info);
    }
  
    public void syntax_error(Symbol cur_token) {
        report_error("\nSintaksna greska", cur_token);
    }
  
    public void unrecovered_syntax_error(Symbol cur_token) throws java.lang.Exception {
        report_fatal_error("Fatalna greska, parsiranje se ne moze nastaviti", cur_token);
    }

    public void report_error(String message, Object info) {
    error_det = true;
    	StringBuilder msg = new StringBuilder(message); 
    	if (info instanceof Symbol)
            msg.append (" na liniji ").append(((Symbol)info).left);
        log.error(msg.toString());
    }



}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MJParser$actions {
  private final MJParser parser;

  /** Constructor */
  CUP$MJParser$actions(MJParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MJParser$do_action(
    int                        CUP$MJParser$act_num,
    java_cup.runtime.lr_parser CUP$MJParser$parser,
    java.util.Stack            CUP$MJParser$stack,
    int                        CUP$MJParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MJParser$result;

      /* select the action based on the action number */
      switch (CUP$MJParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Mulop ::= PROCENAT 
            {
              Mulop RESULT = null;
		 RESULT=new Ostatak(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Mulop ::= PODELJENO 
            {
              Mulop RESULT = null;
		 RESULT=new Deljenje(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Mulop ::= ZVEZDICA 
            {
              Mulop RESULT = null;
		 RESULT=new Mnozenje(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Addop ::= MINUS 
            {
              Addop RESULT = null;
		int operacijaManjeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int operacijaManjeright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object operacijaManje = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Oduzimanje(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Addop ::= PLUS 
            {
              Addop RESULT = null;
		 RESULT=new Sabiranje(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Relop ::= MANJEJEDNAKO 
            {
              Relop RESULT = null;
		 RESULT=new MinusJedanko(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Relop ::= MANJE 
            {
              Relop RESULT = null;
		 RESULT=new Malo(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Relop ::= VECEJEDNAKO 
            {
              Relop RESULT = null;
		 RESULT=new AVeceJed(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // Relop ::= VECE 
            {
              Relop RESULT = null;
		 RESULT=new AVise(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // Relop ::= RAZLICITO 
            {
              Relop RESULT = null;
		 RESULT=new Razlicito(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // Relop ::= JEDNAKOJEDNAKO 
            {
              Relop RESULT = null;
		 RESULT=new Isto(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Assignop ::= EQUAL 
            {
              Assignop RESULT = null;
		 RESULT=new Izjednacavanje(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*Assignop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // MozdaRelOpExpr ::= 
            {
              MozdaRelOpExpr RESULT = null;
		 RESULT=new NemaRelOpExpr(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*MozdaRelOpExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // MozdaRelOpExpr ::= Relop Expr 
            {
              MozdaRelOpExpr RESULT = null;
		int relOperacijaleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int relOperacijaright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Relop relOperacija = (Relop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr expr2 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MozdaRelOpExprPostoji(relOperacija, expr2); RESULT.setLine(relOperacijaleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*MozdaRelOpExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // ExprPomRel ::= Expr Relop 
            {
              ExprPomRel RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr expr1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int relOperacijaleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int relOperacijaright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Relop relOperacija = (Relop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ExpoPrvi(expr1, relOperacija); RESULT.setLine(expr1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(74/*ExprPomRel*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // CondFact ::= Expr 
            {
              CondFact RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr expr1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SecondOption(expr1); RESULT.setLine(expr1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // CondFact ::= ExprPomRel Expr 
            {
              CondFact RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ExprPomRel E1 = (ExprPomRel)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr expr2 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CondFactd(E1, expr2); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // ListaCondFact ::= 
            {
              ListaCondFact RESULT = null;
		 RESULT=new NemaListaCondFact(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*ListaCondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // ListaCondFact ::= ListaCondFact LOGICKOI CondFact 
            {
              ListaCondFact RESULT = null;
		int LCF4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int LCF4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ListaCondFact LCF4 = (ListaCondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int LI1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int LI1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object LI1 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int CF5left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int CF5right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondFact CF5 = (CondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PostojiListaCondFact(LCF4, CF5); RESULT.setLine(LCF4left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*ListaCondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // PrviCondFact ::= CondFact 
            {
              PrviCondFact RESULT = null;
		int Condleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int Condright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondFact Cond = (CondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PrviCond(Cond); RESULT.setLine(Condleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(44/*PrviCondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // CondTerm ::= CondFact ListaCondFact 
            {
              CondTerm RESULT = null;
		int Condleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int Condright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		CondFact Cond = (CondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int LCF1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int LCF1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ListaCondFact LCF1 = (ListaCondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CCondTerm(Cond, LCF1); RESULT.setLine(Condleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // ListaCondTerm ::= 
            {
              ListaCondTerm RESULT = null;
		 RESULT=new NemaListaCondTerm(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*ListaCondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // ListaCondTerm ::= ListaCondTerm LOGICKOILI CondTerm 
            {
              ListaCondTerm RESULT = null;
		int LCT1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int LCT1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ListaCondTerm LCT1 = (ListaCondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int LOGIleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int LOGIright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object LOGI = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int CT1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int CT1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondTerm CT1 = (CondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PostojiListaCondTerm(LCT1, CT1); RESULT.setLine(LCT1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*ListaCondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Condition ::= CondTerm ListaCondTerm 
            {
              Condition RESULT = null;
		int CTERMleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int CTERMright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		CondTerm CTERM = (CondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int LCT8left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int LCT8right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ListaCondTerm LCT8 = (ListaCondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Condition(CTERM, LCT8); RESULT.setLine(CTERMleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Operacija ::= Addop Term 
            {
              Operacija RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Addop A1 = (Addop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int term1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int term1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Term term1 = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new JednaOperacija(A1, term1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*Operacija*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // ListaOperacija ::= 
            {
              ListaOperacija RESULT = null;
		 RESULT=new NemaListeOperacija(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(79/*ListaOperacija*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // ListaOperacija ::= ListaOperacija Operacija 
            {
              ListaOperacija RESULT = null;
		int LisOpleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int LisOpright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ListaOperacija LisOp = (ListaOperacija)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int Op3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int Op3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Operacija Op3 = (Operacija)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ListaOperacijaPostoji(LisOp, Op3); RESULT.setLine(LisOpleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(79/*ListaOperacija*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // MozdaMinus ::= 
            {
              MozdaMinus RESULT = null;
		 RESULT=new NemaMinusa(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(78/*MozdaMinus*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // MozdaMinus ::= MINUS 
            {
              MozdaMinus RESULT = null;
		int Predznakleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int Predznakright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object Predznak = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PostojiMinus(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(78/*MozdaMinus*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Expr1 ::= MozdaMinus Term ListaOperacija 
            {
              Expr1 RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		MozdaMinus M1 = (MozdaMinus)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int T2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int T2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Term T2 = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int ListaOpera3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int ListaOpera3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ListaOperacija ListaOpera3 = (ListaOperacija)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new IzrazExprassa(M1, T2, ListaOpera3); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(69/*Expr1*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // DrugaOpcijaTer ::= Expr1 
            {
              DrugaOpcijaTer RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr1 E1 = (Expr1)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new TernarniDrugaOpcija(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(63/*DrugaOpcijaTer*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // PrvaOpcijaTer ::= Expr1 
            {
              PrvaOpcijaTer RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr1 E1 = (Expr1)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new TernarniPrvaOpcija(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(62/*PrvaOpcijaTer*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // UslovTernarni ::= Expr1 
            {
              UslovTernarni RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr1 E1 = (Expr1)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new TesrnarniUslov(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(61/*UslovTernarni*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Expr2 ::= Term 
            {
              Expr2 RESULT = null;
		int tleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Term t = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PostojiMinusUExpr(t); RESULT.setLine(tleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(68/*Expr2*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Expr ::= Expr1 
            {
              Expr RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr1 E1 = (Expr1)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ObicanExpr(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(70/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Expr ::= UslovTernarni PITANJE PrvaOpcijaTer DVOTACKA DrugaOpcijaTer 
            {
              Expr RESULT = null;
		int U1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int U1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		UslovTernarni U1 = (UslovTernarni)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int P2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int P2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		PrvaOpcijaTer P2 = (PrvaOpcijaTer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int D3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DrugaOpcijaTer D3 = (DrugaOpcijaTer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new IzrazExpr(U1, P2, D3); RESULT.setLine(U1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(70/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // MulFact ::= Mulop Factor 
            {
              MulFact RESULT = null;
		int mulop1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int mulop1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Mulop mulop1 = (Mulop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int factor2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int factor2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Factor factor2 = (Factor)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MulFact(mulop1, factor2); RESULT.setLine(mulop1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*MulFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // ListaMulFact ::= 
            {
              ListaMulFact RESULT = null;
		 RESULT=new NemaListaMulFact(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(54/*ListaMulFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // ListaMulFact ::= ListaMulFact MulFact 
            {
              ListaMulFact RESULT = null;
		int L1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int L1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ListaMulFact L1 = (ListaMulFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MulFact M2 = (MulFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PostojiListaMulFact(L1, M2); RESULT.setLine(L1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(54/*ListaMulFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Term ::= Factor ListaMulFact 
            {
              Term RESULT = null;
		int factor1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int factor1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Factor factor1 = (Factor)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int L1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int L1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ListaMulFact L1 = (ListaMulFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Term(factor1, L1); RESULT.setLine(factor1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(66/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Izrazi ::= 
            {
              Izrazi RESULT = null;
		 RESULT=new NemaIzraza(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*Izrazi*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Izrazi ::= LUGLASTA Expr DUGLASTA 
            {
              Izrazi RESULT = null;
		int oU1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int oU1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object oU1 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int expr3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int expr3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr expr3 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zU1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zU1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zU1 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PostojeNoviIzarzi(expr3); RESULT.setLine(expr3left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*Izrazi*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // NoviSimbol ::= NEW Type Izrazi 
            {
              NoviSimbol RESULT = null;
		int NoviSleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int NoviSright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object NoviS = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int tipNovogSimbolaleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int tipNovogSimbolaright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type tipNovogSimbola = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Izrazi I1 = (Izrazi)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NewSimbol(tipNovogSimbola, I1); RESULT.setLine(tipNovogSimbolaleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(71/*NoviSimbol*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // ActParsLista ::= 
            {
              ActParsLista RESULT = null;
		 RESULT=new SamoJedanClan(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*ActParsLista*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // ActParsLista ::= ActPars 
            {
              ActParsLista RESULT = null;
		int actP1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int actP1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ActPars actP1 = (ActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ActParsListaPostoji(actP1); RESULT.setLine(actP1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*ActParsLista*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // MozdaActPars ::= LPAREN ActParsLista RPAREN 
            {
              MozdaActPars RESULT = null;
		int OZACP1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int OZACP1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object OZACP1 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ActParsLista A1 = (ActParsLista)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zZ1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zZ1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zZ1 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PostojiActPars(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*MozdaActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Pomocni ::= Designator MozdaActPars 
            {
              Pomocni RESULT = null;
		int d2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int d2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Designator d2 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MozdaActPars M1 = (MozdaActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PomocniPostoji(d2, M1); RESULT.setLine(d2left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(64/*Pomocni*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // NoviIzraz2 ::= LPAREN 
            {
              NoviIzraz2 RESULT = null;
		int oZ2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int oZ2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object oZ2 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NoviIzraz2(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*NoviIzraz2*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Factor ::= Pomocni 
            {
              Factor RESULT = null;
		int P1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int P1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Pomocni P1 = (Pomocni)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Pozivi(P1); RESULT.setLine(P1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Factor ::= NoviIzraz2 Expr RPAREN 
            {
              Factor RESULT = null;
		int N1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int N1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		NoviIzraz2 N1 = (NoviIzraz2)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int e4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr e4 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zZ2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zZ2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zZ2 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NoviIzraz(N1, e4); RESULT.setLine(N1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Factor ::= NoviSimbol 
            {
              Factor RESULT = null;
		int N1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		NoviSimbol N1 = (NoviSimbol)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NovSimbol(N1); RESULT.setLine(N1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Factor ::= BOOLCONST 
            {
              Factor RESULT = null;
		int bC1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int bC1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String bC1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new BoolKonstanta(bC1); RESULT.setLine(bC1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Factor ::= CHARCONST 
            {
              Factor RESULT = null;
		int cC1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int cC1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String cC1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new KarakterKonst(cC1); RESULT.setLine(cC1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Factor ::= NUMBER 
            {
              Factor RESULT = null;
		int brojleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int brojright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer broj = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NumerickaKonstanta(broj); RESULT.setLine(brojleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Factor ::= Designator 
            {
              Factor RESULT = null;
		int desleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int desright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Designator des = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FactorDesignator(des); RESULT.setLine(desleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(67/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // ListaExpr ::= 
            {
              ListaExpr RESULT = null;
		 RESULT=new NemaExpresion(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*ListaExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ListaExpr ::= ListaExpr COMMA Expr 
            {
              ListaExpr RESULT = null;
		int L1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int L1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ListaExpr L1 = (ListaExpr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr E2 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ListaExpresion(L1, E2); RESULT.setLine(L1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*ListaExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ActParsPrvi ::= Expr 
            {
              ActParsPrvi RESULT = null;
		int prvileft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int prviright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr prvi = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ActParsPrvi(prvi); RESULT.setLine(prvileft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*ActParsPrvi*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ActPars ::= ActParsPrvi ListaExpr 
            {
              ActPars RESULT = null;
		int prvileft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int prviright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ActParsPrvi prvi = (ActParsPrvi)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int L1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int L1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ListaExpr L1 = (ListaExpr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ActParsic(prvi, L1); RESULT.setLine(prvileft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ListaDes ::= 
            {
              ListaDes RESULT = null;
		 RESULT=new NemaListeDes(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(77/*ListaDes*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ListaDes ::= LUGLASTA Expr DUGLASTA 
            {
              ListaDes RESULT = null;
		int ugDesleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int ugDesright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object ugDes = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int expresDesleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int expresDesright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr expresDes = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zUglDesleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zUglDesright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zUglDes = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ImaListeDes(expresDes); RESULT.setLine(expresDesleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(77/*ListaDes*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // ImeNiza ::= IDENT 
            {
              ImeNiza RESULT = null;
		int Desleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int Desright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String Des = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ElementNiza(Des); RESULT.setLine(Desleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(55/*ImeNiza*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Designator ::= IDENT 
            {
              Designator RESULT = null;
		int Desleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int Desright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String Des = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ObicanBroj(Des); RESULT.setLine(Desleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(76/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Designator ::= ImeNiza LUGLASTA Expr DUGLASTA 
            {
              Designator RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		ImeNiza I1 = (ImeNiza)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int ugDesleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int ugDesright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object ugDes = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int expresDesleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int expresDesright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr expresDes = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zUglDesleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zUglDesright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zUglDes = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorNiz(I1, expresDes); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(76/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Opcije ::= MINUSMINUS 
            {
              Opcije RESULT = null;
		 RESULT=new SmanjiZaJedan(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*Opcije*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Opcije ::= PLUSPLUS 
            {
              Opcije RESULT = null;
		 RESULT=new PovecajZaJedan(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(72/*Opcije*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // DesStatement ::= error SEMI 
            {
              DesStatement RESULT = null;
		int lleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object l = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 parser.report_error("Izvrsen oporavak od greske ; na liniji  " +lleft, null);   RESULT=new DesStatementDerived1(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*DesStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // DesStatement ::= Designator LPAREN RPAREN SEMI 
            {
              DesStatement RESULT = null;
		int imeFunkcijeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int imeFunkcijeright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Designator imeFunkcije = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int oOpleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int oOpright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object oOp = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int zOpleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int zOpright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object zOp = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new FunkcijaBezArgumenata(imeFunkcije); RESULT.setLine(imeFunkcijeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*DesStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // DesStatement ::= Designator LPAREN ActPars RPAREN SEMI 
            {
              DesStatement RESULT = null;
		int imeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int imeright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Designator ime = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int oOpleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int oOpright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Object oOp = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ActPars A1 = (ActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int zOpleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int zOpright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object zOp = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new FunkcijaSaArgumentima(ime, A1); RESULT.setLine(imeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*DesStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // DesStatement ::= Designator MINUSMINUS SEMI 
            {
              DesStatement RESULT = null;
		int imeMinusleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int imeMinusright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Designator imeMinus = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new UnarniMinusMinus(imeMinus); RESULT.setLine(imeMinusleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*DesStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // DesStatement ::= Designator PLUSPLUS SEMI 
            {
              DesStatement RESULT = null;
		int imeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int imeright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Designator ime = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int ppleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int ppright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object pp = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new UnarniPlusPlus(ime); RESULT.setLine(imeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*DesStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // DesStatement ::= Designator Assignop Expr SEMI 
            {
              DesStatement RESULT = null;
		int dleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Designator d = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int AP3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int AP3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Assignop AP3 = (Assignop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int expr8left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int expr8right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr expr8 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int Tz1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int Tz1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object Tz1 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DodelaVrednostiDes(d, AP3, expr8); RESULT.setLine(dleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*DesStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // MozdaNumConst ::= 
            {
              MozdaNumConst RESULT = null;
		 RESULT=new NePostojiNumerickaKonstanta(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*MozdaNumConst*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // MozdaNumConst ::= COMMA NUMBER 
            {
              MozdaNumConst RESULT = null;
		int broj2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int broj2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer broj2 = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PostojiNumerickaKonstanta(broj2); RESULT.setLine(broj2left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*MozdaNumConst*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // MozdaExpr ::= 
            {
              MozdaExpr RESULT = null;
		 RESULT=new NePostojiExpr(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(73/*MozdaExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // MozdaExpr ::= Expr 
            {
              MozdaExpr RESULT = null;
		int expr9left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int expr9right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr expr9 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PostojiExpr(expr9); RESULT.setLine(expr9left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(73/*MozdaExpr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // StatementLista ::= 
            {
              StatementLista RESULT = null;
		 RESULT=new StatementListaNePostoji(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*StatementLista*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // StatementLista ::= StatementLista Statement 
            {
              StatementLista RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementLista S1 = (StatementLista)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int Stm5left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int Stm5right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statement Stm5 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new StatementListaPostoji(S1, Stm5); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*StatementLista*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CaseNaredba ::= CASE NUMBER DVOTACKA StatementLista 
            {
              CaseNaredba RESULT = null;
		int konstantaleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int konstantaright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Integer konstanta = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		StatementLista S1 = (StatementLista)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CaseNaredba(konstanta, S1); RESULT.setLine(konstantaleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*CaseNaredba*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // ListaCaseNaredbi ::= 
            {
              ListaCaseNaredbi RESULT = null;
		 RESULT=new NePostojiListaCaseNaredbi(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*ListaCaseNaredbi*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // ListaCaseNaredbi ::= ListaCaseNaredbi CaseNaredba 
            {
              ListaCaseNaredbi RESULT = null;
		int L1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int L1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ListaCaseNaredbi L1 = (ListaCaseNaredbi)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CaseNaredba C2 = (CaseNaredba)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PostojiListaCaseNaredbi(L1, C2); RESULT.setLine(L1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*ListaCaseNaredbi*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // WhilePocetno ::= WHILE 
            {
              WhilePocetno RESULT = null;
		 RESULT=new PocetnoWhile(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*WhilePocetno*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // DoPocetno ::= DO 
            {
              DoPocetno RESULT = null;
		 RESULT=new DetektovaoDo(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*DoPocetno*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // PocinjeElse ::= ELSE 
            {
              PocinjeElse RESULT = null;
		 RESULT=new ElseNaredba(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(45/*PocinjeElse*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // TacanIfUslov ::= Matched 
            {
              TacanIfUslov RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Matched M1 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new TacanIf(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(47/*TacanIfUslov*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Matched ::= LBRACE StatementLista RBRACE 
            {
              Matched RESULT = null;
		int oStatementleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int oStatementright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object oStatement = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementLista S1 = (StatementLista)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zStatementleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zStatementright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zStatement = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new JosStatement(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Matched ::= PRINT LPAREN Expr MozdaNumConst RPAREN SEMI 
            {
              Matched RESULT = null;
		int oPrintleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int oPrintright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Object oPrint = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		MozdaNumConst M2 = (MozdaNumConst)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int zPrintleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int zPrintright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object zPrint = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int DvotackaPleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int DvotackaPright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object DvotackaP = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PrintNaredba(E1, M2); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Matched ::= READ LPAREN Designator RPAREN SEMI 
            {
              Matched RESULT = null;
		int oReadleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int oReadright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Object oRead = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int zReadleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int zReadright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object zRead = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int dvotackaRleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int dvotackaRright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object dvotackaR = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ReadNaredba(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Matched ::= RETURN MozdaExpr SEMI 
            {
              Matched RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MozdaExpr M1 = (MozdaExpr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int dvotackaRETleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int dvotackaRETright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object dvotackaRET = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ReturnNaredba(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Matched ::= CONTINUE SEMI 
            {
              Matched RESULT = null;
		int dvotackaCNleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int dvotackaCNright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object dvotackaCN = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ContinueNaredba(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Matched ::= BREAK SEMI 
            {
              Matched RESULT = null;
		int dvotackaBRleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int dvotackaBRright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object dvotackaBR = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new BreakNaredba(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Matched ::= SWITCH LPAREN Expr RPAREN LBRACE ListaCaseNaredbi RBRACE 
            {
              Matched RESULT = null;
		int oZ6left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int oZ6right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Object oZ6 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int IzrazSwleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int IzrazSwright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Expr IzrazSw = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int zZ6left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int zZ6right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Object zZ6 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int oSwitchleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int oSwitchright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object oSwitch = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int L1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int L1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ListaCaseNaredbi L1 = (ListaCaseNaredbi)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zSwitchleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zSwitchright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zSwitch = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new SwitchNaredba(IzrazSw, L1); RESULT.setLine(IzrazSwleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Matched ::= DoPocetno Statement WhilePocetno LPAREN Condition RPAREN SEMI 
            {
              Matched RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		DoPocetno D1 = (DoPocetno)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Statement S2 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int W3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int W3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		WhilePocetno W3 = (WhilePocetno)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int otvorenaZagradaWhileleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int otvorenaZagradaWhileright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Object otvorenaZagradaWhile = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int C4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Condition C4 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int ZatvorenaZagradaWhileleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int ZatvorenaZagradaWhileright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object ZatvorenaZagradaWhile = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new DoWhilePetlja(D1, S2, W3, C4); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Matched ::= IF LPAREN Condition RPAREN Matched PocinjeElse Unmatched 
            {
              Matched RESULT = null;
		int oZIFleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int oZIFright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Object oZIF = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Condition C1 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int zZIFleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int zZIFright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Object zZIF = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Matched M2 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int P3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int P3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		PocinjeElse P3 = (PocinjeElse)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int U4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int U4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Unmatched U4 = (Unmatched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new IfNaredba(C1, M2, P3, U4); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Matched ::= DesStatement 
            {
              Matched RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesStatement D1 = (DesStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorStatement(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // PreskociEl ::= Matched 
            {
              PreskociEl RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Matched M1 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PreskociElse(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(46/*PreskociEl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Unmatched ::= IF LPAREN Condition RPAREN Matched PocinjeElse Matched 
            {
              Unmatched RESULT = null;
		int oZIFleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int oZIFright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Object oZIF = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Condition C1 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int zZIFleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int zZIFright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Object zZIF = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Matched M2 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int P3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int P3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		PocinjeElse P3 = (PocinjeElse)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Matched M4 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new UnmatchedIfElse(C1, M2, P3, M4); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Unmatched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Unmatched ::= IF LPAREN Condition RPAREN Statement 
            {
              Unmatched RESULT = null;
		int oZIFleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int oZIFright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Object oZIF = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Condition C1 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int zZIFleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int zZIFright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object zZIF = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statement S2 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new UnmatchedIf(C1, S2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Unmatched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Statement ::= Unmatched 
            {
              Statement RESULT = null;
		int U1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int U1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Unmatched U1 = (Unmatched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new UnmatchedStmt(U1); RESULT.setLine(U1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Statement ::= Matched 
            {
              Statement RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Matched M1 = (Matched)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MatchedStmt(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Parametar ::= Type IDENT MozdaNiz 
            {
              Parametar RESULT = null;
		int tip4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int tip4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Type tip4 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int KoZnaKoleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int KoZnaKoright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String KoZnaKo = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int MNleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int MNright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MozdaNiz MN = (MozdaNiz)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ParametarFje(tip4, KoZnaKo, MN); RESULT.setLine(tip4left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(56/*Parametar*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // JosPars ::= 
            {
              JosPars RESULT = null;
		 RESULT=new NemaViseParam(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(52/*JosPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // JosPars ::= JosPars COMMA Parametar 
            {
              JosPars RESULT = null;
		int J1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int J1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		JosPars J1 = (JosPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int P2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int P2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Parametar P2 = (Parametar)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ImaJosPars(J1, P2); RESULT.setLine(J1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(52/*JosPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // PrviArgument ::= Type IDENT MozdaNiz 
            {
              PrviArgument RESULT = null;
		int tipPromleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int tipPromright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Type tipProm = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int formalniParametarleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int formalniParametarright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String formalniParametar = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int MaybeExprleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int MaybeExprright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MozdaNiz MaybeExpr = (MozdaNiz)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PrviArgumentic(tipProm, formalniParametar, MaybeExpr); RESULT.setLine(tipPromleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*PrviArgument*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // FormPars ::= 
            {
              FormPars RESULT = null;
		 RESULT=new NemaParaetaraFunkcije(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // FormPars ::= PrviArgument JosPars 
            {
              FormPars RESULT = null;
		int P1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int P1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		PrviArgument P1 = (PrviArgument)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int J2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int J2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		JosPars J2 = (JosPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Parametard(P1, J2); RESULT.setLine(P1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // PovratnaVrednsot ::= VOID IDENT 
            {
              PovratnaVrednsot RESULT = null;
		int ImeFjeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int ImeFjeright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String ImeFje = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PovratnaVrVoid(ImeFje); RESULT.setLine(ImeFjeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(53/*PovratnaVrednsot*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // PovratnaVrednsot ::= Type IDENT 
            {
              PovratnaVrednsot RESULT = null;
		int povratnaVrednostNijeVoidleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int povratnaVrednostNijeVoidright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type povratnaVrednostNijeVoid = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int ImeFunkcijeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int ImeFunkcijeright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String ImeFunkcije = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ImaPovratnuVrednost(povratnaVrednostNijeVoid, ImeFunkcije); RESULT.setLine(povratnaVrednostNijeVoidleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(53/*PovratnaVrednsot*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // MethodDecl ::= PovratnaVrednsot LPAREN FormPars RPAREN ListaVarDekl LBRACE StatementLista RBRACE 
            {
              MethodDecl RESULT = null;
		int PovVrediImeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left;
		int PovVrediImeright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).right;
		PovratnaVrednsot PovVrediIme = (PovratnaVrednsot)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).value;
		int otvorenaMleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int otvorenaMright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		Object otvorenaM = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		FormPars F1 = (FormPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int zatvorenaMleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int zatvorenaMright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Object zatvorenaM = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int L2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int L2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		ListaVarDekl L2 = (ListaVarDekl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int oLVDleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int oLVDright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object oLVD = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int S3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementLista S3 = (StatementLista)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zLVDleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zLVDright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zLVD = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ZavrsenaFunkcija(PovVrediIme, F1, L2, S3); RESULT.setLine(PovVrediImeleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // MethodDeclList ::= 
            {
              MethodDeclList RESULT = null;
		 RESULT=new NijeLista(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // MethodDeclList ::= MethodDeclList MethodDecl 
            {
              MethodDeclList RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclList M1 = (MethodDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDecl M2 = (MethodDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new JesteListaMethodDec(M1, M2); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Type ::= IDENT 
            {
              Type RESULT = null;
		int typeNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int typeNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String typeName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Type(typeName); RESULT.setLine(typeNameleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(57/*Type*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Telo ::= MethodDeclList RBRACE 
            {
              Telo RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclList M1 = (MethodDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zatvorena1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zatvorena1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zatvorena1 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Telo(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Telo*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // MozdaTelo ::= 
            {
              MozdaTelo RESULT = null;
		 RESULT=new NemaTela(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*MozdaTelo*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // MozdaTelo ::= LBRACE Telo 
            {
              MozdaTelo RESULT = null;
		int otvorena1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int otvorena1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object otvorena1 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Telo T1 = (Telo)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ImaTelo(T1); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*MozdaTelo*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Prosirena ::= 
            {
              Prosirena RESULT = null;
		 RESULT=new NijeProsirena(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*Prosirena*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Prosirena ::= EXTENDS Type 
            {
              Prosirena RESULT = null;
		int TipIzKlaseleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int TipIzKlaseright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Type TipIzKlase = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new JesteProsirena(TipIzKlase); RESULT.setLine(TipIzKlaseleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*Prosirena*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ListaVarDekl ::= 
            {
              ListaVarDekl RESULT = null;
		 RESULT=new NijeListaaa(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*ListaVarDekl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ListaVarDekl ::= ListaVarDekl VarDekl 
            {
              ListaVarDekl RESULT = null;
		int L1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int L1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ListaVarDekl L1 = (ListaVarDekl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDekl V2 = (VarDekl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new JesteListaVarDekl(L1, V2); RESULT.setLine(L1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*ListaVarDekl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ClassDekl ::= CLASS IDENT Prosirena LBRACE ListaVarDekl MozdaTelo RBRACE 
            {
              ClassDekl RESULT = null;
		int imeKlaseleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int imeKlaseright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		String imeKlase = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int P1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int P1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Prosirena P1 = (Prosirena)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int oZKleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int oZKright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Object oZK = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int L2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int L2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ListaVarDekl L2 = (ListaVarDekl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int M3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MozdaTelo M3 = (MozdaTelo)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zZKleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zZKright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zZK = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassDecl(imeKlase, P1, L2, M3); RESULT.setLine(imeKlaseleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*ClassDekl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // NovaProm ::= IDENT MozdaNiz 
            {
              NovaProm RESULT = null;
		int ImeNovePromenljiveleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int ImeNovePromenljiveright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String ImeNovePromenljive = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int MozdaJePonovoNizleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int MozdaJePonovoNizright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MozdaNiz MozdaJePonovoNiz = (MozdaNiz)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NovaPromenljivaPostoji(ImeNovePromenljive, MozdaJePonovoNiz); RESULT.setLine(ImeNovePromenljiveleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(75/*NovaProm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ErrorPom ::= error 
            {
              ErrorPom RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 parser.report_error("Izvrsen oporavak od greske na liniji  "+eleft, null);   RESULT=new ErrorPomDerived1(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ErrorPom*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // JosParametara ::= 
            {
              JosParametara RESULT = null;
		 RESULT=new NemaViseParametara(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*JosParametara*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // JosParametara ::= JosParametara COMMA ErrorPom 
            {
              JosParametara RESULT = null;
		int J1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int J1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		JosParametara J1 = (JosParametara)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ErrorPom E2 = (ErrorPom)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ImaJosParametaraError(J1, E2); RESULT.setLine(J1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*JosParametara*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // JosParametara ::= JosParametara COMMA NovaProm 
            {
              JosParametara RESULT = null;
		int J1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int J1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		JosParametara J1 = (JosParametara)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int NovaPromenkjivaleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int NovaPromenkjivaright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		NovaProm NovaPromenkjiva = (NovaProm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ImaJosParametara(J1, NovaPromenkjiva); RESULT.setLine(J1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*JosParametara*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // MozdaNiz ::= 
            {
              MozdaNiz RESULT = null;
		 RESULT=new NijeNiz(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(60/*MozdaNiz*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // MozdaNiz ::= LUGLASTA DUGLASTA 
            {
              MozdaNiz RESULT = null;
		int oUNleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int oUNright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object oUN = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zUNleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zUNright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zUN = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new JesteNiz(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(60/*MozdaNiz*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // VarDekl ::= error JosParametara SEMI 
            {
              VarDekl RESULT = null;
		int lleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		JosParametara l = (JosParametara)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 parser.report_error("Izvrsen oporavak od greske -----  na liniji  "+( lleft < aleft?lleft:aleft) , null);   RESULT=new VarDeklDerived1(l); RESULT.setLine(lleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*VarDekl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // VarDekl ::= Type IDENT MozdaNiz JosParametara SEMI 
            {
              VarDekl RESULT = null;
		int tipPromenljiveleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int tipPromenljiveright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Type tipPromenljive = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int imePromenljiveleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int imePromenljiveright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		String imePromenljive = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int MozdaJeNizleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int MozdaJeNizright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		MozdaNiz MozdaJeNiz = (MozdaNiz)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int ProveraZaParametreleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int ProveraZaParametreright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		JosParametara ProveraZaParametre = (JosParametara)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zZPleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zZPright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zZP = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDekla(tipPromenljive, imePromenljive, MozdaJeNiz, ProveraZaParametre); RESULT.setLine(tipPromenljiveleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*VarDekl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // MozdaKonstante ::= 
            {
              MozdaKonstante RESULT = null;
		 RESULT=new NoKonstanta(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(65/*MozdaKonstante*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // MozdaKonstante ::= MozdaKonstante COMMA IDENT EQUAL Konstante 
            {
              MozdaKonstante RESULT = null;
		int PostojiPrethodnaleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int PostojiPrethodnaright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		MozdaKonstante PostojiPrethodna = (MozdaKonstante)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int imeKonstNizleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int imeKonstNizright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String imeKonstNiz = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int Jednakost2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int Jednakost2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object Jednakost2 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int kleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int kright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Konstante k = (Konstante)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MozdaKonstantica(PostojiPrethodna, imeKonstNiz, k); RESULT.setLine(PostojiPrethodnaleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(65/*MozdaKonstante*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Konstante ::= BOOLCONST 
            {
              Konstante RESULT = null;
		int tacnoNetacnoleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int tacnoNetacnoright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String tacnoNetacno = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new KonstantaBOOL(tacnoNetacno); RESULT.setLine(tacnoNetacnoleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(58/*Konstante*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Konstante ::= CHARCONST 
            {
              Konstante RESULT = null;
		int slovnaKonstantaleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int slovnaKonstantaright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String slovnaKonstanta = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new KonstantaCHAR(slovnaKonstanta); RESULT.setLine(slovnaKonstantaleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(58/*Konstante*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Konstante ::= NUMBER 
            {
              Konstante RESULT = null;
		int numerickaKonstantaleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int numerickaKonstantaright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer numerickaKonstanta = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new KonstantaNum(numerickaKonstanta); RESULT.setLine(numerickaKonstantaleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(58/*Konstante*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // PrvaConst ::= IDENT EQUAL Konstante 
            {
              PrvaConst RESULT = null;
		int imeKonstanteleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int imeKonstanteright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String imeKonstante = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int Jednakost1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int Jednakost1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object Jednakost1 = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int Konstantaleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int Konstantaright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Konstante Konstanta = (Konstante)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new PrvaConst(imeKonstante, Konstanta); RESULT.setLine(imeKonstanteleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*PrvaConst*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ConstDekl ::= CONST Type PrvaConst MozdaKonstante SEMI 
            {
              ConstDekl RESULT = null;
		int TipKonstanteleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int TipKonstanteright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Type TipKonstante = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int pcleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int pcright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		PrvaConst pc = (PrvaConst)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int MozKonleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int MozKonright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MozdaKonstante MozKon = (MozdaKonstante)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ConstDekl(TipKonstante, pc, MozKon); RESULT.setLine(TipKonstanteleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(50/*ConstDekl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Decl ::= ClassDekl 
            {
              Decl RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ClassDekl C1 = (ClassDekl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassDeklaracija(C1); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Decl ::= ConstDekl 
            {
              Decl RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstDekl C1 = (ConstDekl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstDeklaracija(C1); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Decl ::= VarDekl 
            {
              Decl RESULT = null;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDekl V1 = (VarDekl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDeklaracija(V1); RESULT.setLine(V1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // DeclList ::= 
            {
              DeclList RESULT = null;
		 RESULT=new NoVarDecl(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*DeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // DeclList ::= DeclList Decl 
            {
              DeclList RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		DeclList D1 = (DeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Decl D2 = (Decl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Declarations(D1, D2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*DeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ImePrograma ::= IDENT 
            {
              ImePrograma RESULT = null;
		int ImeProgramaleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int ImeProgramaright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String ImePrograma = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ImePrograma(ImePrograma); RESULT.setLine(ImeProgramaleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(48/*ImePrograma*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              SyntaxNode RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Program start_val = (Program)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		RESULT = start_val;
              CUP$MJParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MJParser$parser.done_parsing();
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= PROG ImePrograma DeclList LBRACE MethodDeclList RBRACE 
            {
              Program RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		ImePrograma p = (ImePrograma)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		DeclList D1 = (DeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int oProgleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int oProgright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Object oProg = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclList M2 = (MethodDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int zProgleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int zProgright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Object zProg = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Program(p, D1, M2); RESULT.setLine(pleft); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(49/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

